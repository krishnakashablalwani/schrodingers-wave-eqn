# Visualization of the Schr√∂dinger Wave Equation

This project provides two interactive visualizations of a fundamental concept in quantum mechanics: a particle (like an electron) trapped in a one-dimensional "box". It helps to build an intuition for wave functions, probability clouds, and energy levels.

The script uses real-world physical constants for an electron confined within a 1-nanometer space.

## What is a "Particle in a Box"?

In the everyday world, you can place a ball in a box, and it can have any amount of energy. It can be still, or you can shake it gently or vigorously.

In the quantum world, things are different. When a particle like an electron is trapped in a very small space:
1.  **Quantized Energy:** It can't have just *any* energy. It's restricted to specific, discrete energy levels. Think of it like a guitar string that can only vibrate at specific frequencies to produce specific notes.
2.  **Wave-Particle Duality:** The electron behaves like a wave. We can't know its exact position and momentum at the same time.
3.  **Probability Cloud:** Instead of a precise location, we can only determine the *probability* of finding the electron at any given spot. This distribution of probabilities is often called the "electron cloud". Where the cloud is densest, the probability is highest.

This project visualizes these strange but true concepts.

## The Visualizations Explained

The script produces two different windows, each showing a different aspect of the particle's behavior.

### 1. Electron Cloud Visualization (Tkinter Window)

This window shows the **stable states** of the electron. These are the pure, single energy levels it is allowed to occupy.

-   **What you see:** A black box containing a cloud of cyan dots. The regions where the dots are densest are where you are most likely to find the electron.
-   **The Slider:** The slider at the bottom allows you to change the energy level, labeled as `n`.
    -   At `n=1` (the lowest energy, or "ground state"), the electron is most likely to be found in the very center of the box.
    -   At `n=2`, the electron is never found in the center. There are two regions of high probability.
    -   As you increase `n`, you see more and more regions of high and low probability.
-   **How it works:** This visualization uses a technique called "rejection sampling". The code generates tens of thousands of random dots and only draws a dot if its position falls within the probability distribution calculated by the wave equation.

### 2. Animated Wave Evolution (Matplotlib Window)

This window shows a more complex and dynamic situation called a **superposition**. This is what happens when the electron is in a mix of two different energy states at the same time (in this case, a 50/50 mix of the `n=1` and `n=2` states).

-   **What you see:** An animated graph showing how the wave function and probability cloud change over time.
-   **Blue and Red Lines (The Wave Function):** These represent the real and imaginary parts of the electron's wave function. You can see them oscillating, showing the "wavy" nature of the particle.
-   **Green Shaded Area (The Electron Cloud):** This is the probability of finding the electron. Because the particle is in a mix of two states, the probability cloud is not stable. It sloshes back and forth inside the box over time. This shows that the most likely place to find the electron is constantly changing.
-   **Black Dotted/Dashed Lines (Energy Levels):** These horizontal lines show the scaled energy levels of the `n=1` and `n=2` states that are being mixed together.

### SciPy Verification (Terminal Output)

When you first run the script, you will see a message in your terminal. This uses the `scipy` library to perform a mathematical check. It calculates the total probability of finding the electron *anywhere* inside the box. The result should be `1.0` (or 100%), confirming that the wave function is correctly "normalized".